// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package media_manager

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Request struct {
	// Types that are valid to be assigned to Type:
	//	*Request_Fileslist
	//	*Request_Unrar
	Type isRequest_Type `protobuf_oneof:"type"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type isRequest_Type interface {
	isRequest_Type()
}

type Request_Fileslist struct {
	Fileslist *FilesListRequest `protobuf:"bytes,1,opt,name=fileslist,oneof"`
}
type Request_Unrar struct {
	Unrar *UnrarRequest `protobuf:"bytes,2,opt,name=unrar,oneof"`
}

func (*Request_Fileslist) isRequest_Type() {}
func (*Request_Unrar) isRequest_Type()     {}

func (m *Request) GetType() isRequest_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Request) GetFileslist() *FilesListRequest {
	if x, ok := m.GetType().(*Request_Fileslist); ok {
		return x.Fileslist
	}
	return nil
}

func (m *Request) GetUnrar() *UnrarRequest {
	if x, ok := m.GetType().(*Request_Unrar); ok {
		return x.Unrar
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_Fileslist)(nil),
		(*Request_Unrar)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// type
	switch x := m.Type.(type) {
	case *Request_Fileslist:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fileslist); err != nil {
			return err
		}
	case *Request_Unrar:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unrar); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Type has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // type.fileslist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FilesListRequest)
		err := b.DecodeMessage(msg)
		m.Type = &Request_Fileslist{msg}
		return true, err
	case 2: // type.unrar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnrarRequest)
		err := b.DecodeMessage(msg)
		m.Type = &Request_Unrar{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// type
	switch x := m.Type.(type) {
	case *Request_Fileslist:
		s := proto.Size(x.Fileslist)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Unrar:
		s := proto.Size(x.Unrar)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Response struct {
	// Types that are valid to be assigned to Type:
	//	*Response_Fileslist
	//	*Response_Unrar
	Type isResponse_Type `protobuf_oneof:"type"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type isResponse_Type interface {
	isResponse_Type()
}

type Response_Fileslist struct {
	Fileslist *FilesListResponse `protobuf:"bytes,1,opt,name=fileslist,oneof"`
}
type Response_Unrar struct {
	Unrar *UnrarResponse `protobuf:"bytes,2,opt,name=unrar,oneof"`
}

func (*Response_Fileslist) isResponse_Type() {}
func (*Response_Unrar) isResponse_Type()     {}

func (m *Response) GetType() isResponse_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Response) GetFileslist() *FilesListResponse {
	if x, ok := m.GetType().(*Response_Fileslist); ok {
		return x.Fileslist
	}
	return nil
}

func (m *Response) GetUnrar() *UnrarResponse {
	if x, ok := m.GetType().(*Response_Unrar); ok {
		return x.Unrar
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_Fileslist)(nil),
		(*Response_Unrar)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// type
	switch x := m.Type.(type) {
	case *Response_Fileslist:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Fileslist); err != nil {
			return err
		}
	case *Response_Unrar:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unrar); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.Type has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 1: // type.fileslist
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FilesListResponse)
		err := b.DecodeMessage(msg)
		m.Type = &Response_Fileslist{msg}
		return true, err
	case 2: // type.unrar
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnrarResponse)
		err := b.DecodeMessage(msg)
		m.Type = &Response_Unrar{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// type
	switch x := m.Type.(type) {
	case *Response_Fileslist:
		s := proto.Size(x.Fileslist)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_Unrar:
		s := proto.Size(x.Unrar)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Request)(nil), "media_manager.Request")
	proto.RegisterType((*Response)(nil), "media_manager.Response")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcd, 0x4d, 0x4d, 0xc9, 0x4c,
	0x8c, 0xcf, 0x4d, 0xcc, 0x4b, 0x4c, 0x4f, 0x2d, 0x92, 0xe2, 0x4f, 0xcb, 0xcc, 0x49, 0x2d, 0xce,
	0xc9, 0x2c, 0x2e, 0x81, 0xc8, 0x4b, 0x71, 0x97, 0xe6, 0x15, 0x25, 0x16, 0x41, 0x38, 0x4a, 0xed,
	0x8c, 0x5c, 0xec, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0xf6, 0x5c, 0x9c, 0x70, 0xb5,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0xf2, 0x7a, 0x28, 0x86, 0xe9, 0xb9, 0x81, 0xe4, 0x7d,
	0x32, 0x8b, 0x4b, 0xa0, 0x7a, 0x3c, 0x18, 0x82, 0x10, 0x7a, 0x84, 0x8c, 0xb9, 0x58, 0xc1, 0x66,
	0x4b, 0x30, 0x81, 0x35, 0x4b, 0xa3, 0x69, 0x0e, 0x05, 0xc9, 0x21, 0x34, 0x42, 0xd4, 0x3a, 0xb1,
	0x71, 0xb1, 0x94, 0x54, 0x16, 0xa4, 0x2a, 0x75, 0x31, 0x72, 0x71, 0x04, 0xa5, 0x16, 0x17, 0xe4,
	0xe7, 0x15, 0xa7, 0x0a, 0x39, 0x60, 0x3a, 0x45, 0x01, 0xb7, 0x53, 0x20, 0x9a, 0x50, 0xdd, 0x62,
	0x82, 0xea, 0x16, 0x19, 0xec, 0x6e, 0x81, 0xeb, 0x44, 0x75, 0x4c, 0x12, 0x1b, 0x38, 0x74, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x7c, 0x89, 0x99, 0x5b, 0x01, 0x00, 0x00,
}
